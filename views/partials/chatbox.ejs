<div class="modal" id="modal">
    <div class="modal-content">
        <a href="#" class="modal-close black-txt">&times;</a>
        <h1>Chat</h1>
        <div class="chat-container">
            <div class="container-30">
                <ul class="users-list" id="users-list">
                </ul>
            </div>
            <div class="container-70">
                <div id="message-container">
                    <ul id="messages" class="messages">
                    </ul>
                    <form action="" id="send-container">
                        <div class="input-container">
                            <input type="text" id="message-input" name="message-input" autocomplete="off" required>
                            <label for="message-input">Your Message:</label>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
const usersList = document.getElementById('users-list')
var form = document.getElementById('send-container')
var input = document.getElementById('message-input')

socket.on('new user', function(users) {
    const getAllUser = Array.from(document.querySelectorAll('#users-list>li'));
    document.getElementById("users-list").innerHTML = "";
    users.forEach(user => {
        let item = document.createElement('li');
        item.className = "user-in-chat";
        item.setAttribute('id',user.id);
        item.setAttribute('onclick','clickOnUser(this.id)')
        item.textContent = `${user.username}`;
        usersList.appendChild(item);
    })

    if(getAllUser.length > 0){
        getAllUser.forEach(userInList => {
            users.forEach(userInServ => {
                if(userInList.id !== userInServ.id){
                    let item = document.createElement('li');
                    item.className = "user-in-chat";
                    item.setAttribute('id',user.id);
                    item.setAttribute('onclick','clickOnUser(this.id)')
                    item.textContent = `${user.username}`;
                    usersList.appendChild(item);
                } else {
                    document.getElementById(socket.id).innerHTML = "";
                }
            })
        })
    }
    document.getElementById(socket.id).innerHTML = "";
});

function clickOnUser(clicked_id) {
    let searchParams = new URLSearchParams(location.search);
    searchParams.set('id', clicked_id);

    searchParams.toString()
    window.history.replaceState({}, '', `${location.pathname}?${searchParams.toString()}`);

}

form.addEventListener('submit', function(e) {
    e.preventDefault()
    if (input.value) {
        const userId = Qs.parse(location.search, { ignoreQueryPrefix: true }).id
        if(userId) {
            let item = document.createElement('li');
            item.className = "message send";
            item.textContent = `Me: ${input.value}`;
            messages.appendChild(item);
            var messageBody = document.querySelector('#messages');
            messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            socket.emit('chat message', input.value, userId)
            input.value = ''
        }
        input.value = ''
    }
});

socket.on('new message', function(data) {
    let prevTitle = document.title
    document.title = '(1) New Message'

    setTimeout(() => {
        document.title = prevTitle
    }, "2000")

    window.location.href = `#modal`;

    let searchParams = new URLSearchParams(location.search);
    searchParams.set('id', data.fromSocket);

    searchParams.toString()
    window.history.replaceState({}, '', `${location.pathname}?${searchParams.toString()}`);

    let item = document.createElement('li');
    item.className = "message get";
    item.textContent = `${data.from}: ${data.message}`;
    messages.appendChild(item);
    var messageBody = document.querySelector('#messages');
    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
});

</script>
